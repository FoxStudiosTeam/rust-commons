// THIS FILE IS GENERATED, NOT FOR MANUAL EDIT
use std::marker::PhantomData;
use sqlx::Executor;

use crate::prelude::{Orm, OrmDB, SelectorInteractions};

use crate::generated::{
    {{#each tables}}
    {{snakeToCamel name}},
    {{/each}}
};

pub trait DBTables<DB, E> 
where
    DB: OrmDB,
{
    {{#each tables}}
    fn {{name}}<'e>(&'e self) -> SelectorInteractions<'e, DB, E, {{snakeToCamel name}}>
    where 
        &'e E: Executor<'e, Database = DB>;
    {{/each}}
}

impl<DB, E> DBTables<DB, E> for Orm<E>
where
    DB: OrmDB,
{
    {{#each tables}}
    fn {{name}}<'e>(&'e self) -> SelectorInteractions<'e, DB, E, {{snakeToCamel name}}>
    where
        &'e E: Executor<'e, Database = DB>,
    {
        SelectorInteractions {
            _g: PhantomData,
            _t: PhantomData,
            executor: &self.executor,
        }
    }
    {{/each}}
}